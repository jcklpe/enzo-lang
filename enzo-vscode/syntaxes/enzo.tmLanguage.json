{
  "scopeName": "source.enzo",
  "name": "Enzo",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#function-definitions"
    },
    {
      "include": "#named-functions"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#function-calls"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.test-case.enzo",
          "match": "//=.*$"
        },
        {
          "name": "comment.line.double-slash.enzo",
          "match": "//.*$"
        },
        {
          "name": "comment.block.enzo",
          "begin": "/'",
          "end": "'/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.enzo",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.enzo",
              "match": "\\\\."
            },
            {
              "include": "#string-interpolation"
            }
          ]
        }
      ]
    },
    "string-interpolation": {
      "patterns": [
        {
          "name": "meta.embedded.enzo",
          "begin": "<",
          "end": ">",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.embedded.begin.enzo"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.section.embedded.end.enzo"
            }
          },
          "patterns": [
            {
              "include": "#variables"
            },
            {
              "include": "#function-calls"
            },
            {
              "include": "#operators"
            },
            {
              "include": "#numbers"
            },
            {
              "include": "#property-access"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\b-?\\d+\\b"
        },
        {
          "name": "constant.numeric",
          "match": "\\b-?\\d+\\.\\d+\\b"
        }
      ]
    },
    "function-definitions": {
      "patterns": [
        {
          "name": "meta.function.definition.enzo",
          "match": "([a-zA-Z_][a-zA-Z0-9_\\-]*)\\s*(:)\\s*\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.enzo"
            },
            "2": {
              "name": "entity.name.function.enzo"
            }
          }
        }
      ]
    },
    "named-functions": {
      "patterns": [
        {
          "name": "meta.function.definition.enzo",
          "match": "([a-zA-Z_][a-zA-Z0-9_\\-]*)\\s*:",
          "captures": {
            "1": {
              "name": "entity.name.function.enzo"
            }
          }
        }
      ]
    },
    "function-calls": {
      "patterns": [
        {
          "name": "meta.function.call.enzo",
          "match": "([a-zA-Z_][a-zA-Z0-9_\\-]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "entity.name.function.call.enzo"
            }
          }
        },
        {
          "name": "meta.variable.function.call.enzo",
          "match": "(\\$[a-zA-Z_\\-][a-zA-Z0-9_\\-]*)\\s*\\(",
          "captures": {
            "1": {
              "name": "variable.function.call.enzo"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.enzo",
          "match": "\\$[a-zA-Z_\\-0-9][a-zA-Z0-9_\\-]*"
        }
      ]
    },
    "property-access": {
      "patterns": [
        {
          "name": "variable.other.property.enzo",
          "match": "\\.[a-zA-Z_][a-zA-Z0-9_\\-]*"
        },
        {
          "name": "constant.numeric",
          "match": "\\.\\d+"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.enzo",
          "match": "\\b(?:if|then|else|end|param|return|for|while|and|or|not|filter|transform|function)\\b"
        },
        {
          "name": "keyword.operator.word.enzo",
          "match": "\\b(?:is|less|than|greater|at|most|least)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "(<:|:>|:)"
        },
        {
          "name": "keyword.operator.arithmetic.enzo",
          "match": "[+\\-*/]"
        },
        {
          "name": "keyword.operator.comparison.enzo",
          "match": "="
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.enzo",
          "match": "[;,]"
        },
        {
          "name": "punctuation.section.brackets.enzo",
          "match": "[\\[\\]]"
        },
        {
          "name": "punctuation.section.braces.enzo",
          "match": "[\\{\\}]"
        },
        {
          "name": "punctuation.section.function.enzo",
          "match": "[\\(\\)]"
        }
      ]
    }
  }
}
