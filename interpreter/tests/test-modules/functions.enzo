// ── FUNCTIONS  -------------------
//= Empty function atom
();  // prints nothing
//= Function atom with just a single value
(6);  // prints 6

//= Function atom with single variable and implicit return
($foo: 99; $foo); // prints 99

//= Nested function atoms
(($x: 2; $y: 3; $x * $y);); // prints 6
(($x: 3; $y: 3; $x * $y)); // prints 9
//= Function atom one liner with implicit return
($x: 3, $y: 2; $x + $y);   // prints 5
($x: 3; $y: 3; $x + $y);   // prints 6
// (both commas and semicolons work for breaking up variables in single line statements)

//= Function with only a return statement (multi-line)
(
    return(123);
); // prints 123

//= Multiline function atom with explicit return
(
$x: 100;
$y: 100;
return(($x + $y));

); // prints 200

//= Multiline function atom with explicit return 2
($x: 101;
$y: 100;
return(($x + $y));); // prints 201

//= Multiline nested function atoms
(
    $a: 10;
    $b: 20;
    return((
        $c: 2;
        return(($a + $b + $c));
    ));
); // prints 32

//= Single line, implicit return, named function
times2: (2 * 2); // binds (2 * 2) to the times2 keyname
"this is the normal function call;";
times2();       // prints 4
"this is the $times2 style function call;";
$times2;       // prints 4
"this is the $times2(); style function call";
$times2();       // prints 4

//= Nameless function: multi-line with no explicit return (should error)
($x: 1;
 $y: 2;
 $x + $y;
);         // error: no explicit return in multi-line function

//= Multi-line with params and default values
adder: (
param $x: 6; // these are default values
param $y: 6;
return(($y + $x));
);

adder();                       // prints 12
$adder();                      // prints 12
$adder;                      // prints 12

//= passing functions as references
$referenced-function: @adder;  // does not invoke adder function just saves it to another variable as a reference
$referenced-function();        // prints 12
adder(4, 5);                   // prints 9
adder(4, 5, 6);                // error: too many args
$nada: ;
$adder($nada, 1000)            // prints 1006
$adder("", 500);               // error: arg is type number not text
$referenced-function(4, 5);    // prints 9
