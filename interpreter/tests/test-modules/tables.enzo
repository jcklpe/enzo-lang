//= TABLE STUFF ───────────────────────────────────────────────────────────
$table: { $name: "Alice", $age: 30 };
$table;             // binds “{ $name: "Alice", $age: 30 }”
$table.name;        // prints “Alice”
$table.age;         // prints “30”

//= REBINDING TABLE PROPERTIES ────────────────────────────────────────────
$table.name <: "Bob";
$table.name;        // prints “Bob”
$table;             // prints “{ $name: "Bob", $age: 30 }”

//= ANOTHER TABLE + PROPERTY REBIND ───────────────────────────────────────
$table2: { $foo: 42, $bar: "hello" };
$table2;
$table2.bar;        // prints “hello”
$table2.foo <: 100;
$table2.foo;
$table2;            // prints “{ $foo: 100, $bar: "hello" }”

//= EMPTY TABLE LITERAL + BAD PROP ACCESS ERROR ──────────────────────────
$emptyTable: {};
$emptyTable;            // prints “{ }”
$emptyTable.someKey;    // error: Keyname '$someKey' does not exist on this table

//= NESTED TABLE + MIXED INDEX/ATTR ───────────────────────────────────────
$nestedTable: {
    $inner: {
        $val: 42,
        $arr: [10, 20]
    }
};
$nestedTable;
$nestedTable.inner.val;     // prints “42”
$nestedTable.inner.arr.2;   // prints “20”

//= REBINDING NESTED TABLES ───────────────────────────────────────────────
$nestedTable.inner.val <: 100;
$nestedTable.inner.val;     // prints “100”

//= COMPLEX TABLE + LIST INDEX/PROPERTY ACCESS ─────────────────────────
$complex: {
    $tbl: { $a: [100, 200], $b: "x" },
    $lst: [ { $foo: 1 }, { $foo: 2 } ]
};
$complex;           // prints { $tbl: { $a: [ 100, 200 ], $b: "x" }, $lst: [ { $foo: 1 }, { $foo: 2 } ] }
$complex.tbl.a.1;    // prints “100”
$complex.lst.2.foo;  // prints “2”

//= TABLE OF LISTS + INDEX OF LIST ─────────────────────────────────────
$tol: { $first: [1, 2], $second: [3, 4] };
$tol;
$tol.first.2;         // prints “2”
$tol.second;          // prints “[ 3, 4 ]”

//= MORE TABLE WEIRDNESS
$deep-table: { $x: { $y: { $z: 7 } } };
$deep-table;            // prints { $x: { $y: { $z: 7 } } }
$deep-table.x.y.z; // prints 7

//= Table property errors
$table9: { $foo: 1 };
$table9;                // prints { $foo: 1 }
$table9.bar;         // error: table property '$bar' not found
$table9.1;           // error: index applies to lists
$table9.foo.bar;     // error: table property '$bar' not found

$prim: 999;
$prim;                      // prints 999;
$prim.someKey <: 5;       // error: table property '$someKey' not found

$myTbl: { $a: 1 };
$myTbl;                    // prints { $a: 1 }
$myTbl.1;                 // error: index applies to lists

$tbl: { $x: 1 };
$tbl;                   // prints { $x: 1 }
$tbl.x <: 99;           // rebinds 99 to $tbl.x
$tbl.x;                 // prints 99
$tbl;                   // prints { $x: 99 }
$tbl.y <: 42;           // error: table property '$y' not found <<<do we already have an error message for this?>>>

//= Valid trailing commas (should succeed)
$goodTable: { $foo: 1, $bar: 2, };
$goodTable;

//= invalid trailing commas (should error)
$badTable1: { $foo: 1,, $bar: 2 };
$badTable2: { ,$foo: 1, $bar: 2 };
$badTable3: { , };
