//= BINDING MATH OPERATIONS ────────────────────────────────────────────────
@math1: 100;    // binds 100
$math1;            // prints 100
@math2: (3 + 2);          // binds a function atom
$math2; // prints 5
($math1 + $math2);            // prints 105

//= ARITHMETIC PRECEDENCE CHECK ─────────────────────────────────────────────
@precedence-check: (2 + 3 * 4);      // binds a function atom
$precedence-check;                 // prints 14

@precedence-check2: ((2 + 3) * 4);    // binds a function atom
$precedence-check2;                 // prints 20

//= PARENTHESIZED EXPRESSIONS AS STAND‐ALONE ─────────────────────────────
(10 + 5);                 // prints “15”

//= LARGE NUMBERS + NEGATIVE NUMBERS ────────────────────────────────────
@big: 1234567890;         // binds “1234567890”
$big;                     // prints “1234567890”
@neg: -5;                 // binds “-5”
$neg;                     // prints “-5”
($neg * 2);                 // prints “-10”
@negzero: -0;             // binds 0 (should not crash)
$negzero;                 // prints 0 (should not crash)
@weird: --5;              // error: double minus not allowed

//= Modulo Basics
(5%2); // prints 1
5%3; // prints 2
5%5; // prints 0
50 % 5;  // prints 0
8 % 2; // prints 0

//= MODULO WITH NEGATIVES
-5 % 3;     // 1
5 % -3;     // 2
-5 % -3;         // should return 1

//= MODULO WITH ZERO DIVIDEND
0 % 3;           // should return 0

//= MODULO BY 1
7 % 1;           // should return 0
-7 % 1;          // should return 0

//= MODULO BY -1
7 % -1;          // should return 0
-7 % -1;         // should return 0

//= MODULO WITH LARGE NEGATIVE DIVIDEND
-13 % 4;         // should return 3

//= MODULO WITH DIVISOR ZERO (ERROR)
5 % 0;           // should error: division by zero
-5 % 0;          // should error: division by zero