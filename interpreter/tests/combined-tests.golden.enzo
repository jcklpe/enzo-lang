//= INVOKING AN UNDEFINED VARIABLE
unknown variable: $undefinedVar
    $undefinedVar;
//= EMPTY BIND ────────────────────────────────────────────────────────────
//= REDECLARING A VARIABLE (USING “:”) ERRORS ────────────────────────────
error: $x already defined
    $x: 10;
//= REBINDING WITH “<:” AND INVOKING ───────────────────────────────────────
100
error: cannot assign Text to Number
    $x <: "hello";
//= FULL BIND UPFRONT LOCKING TYPE ──────────────────────────────────────────
7
8
error: cannot assign Text to Number
    $z <: "oops";
error: $z already defined
    $z : "oops";
//= MIXED‐CASE VARIABLE NAMES ───────────────────────────────────────────
10
20
30
30
//= REBINDING WITH “:>” IMPLICITLY BINDS IF NEEDED ────────────────────────
55
error: cannot assign Text to Number
    $newImplicit <: "oops";
"cool dude"
//= MULTIPLE ASSIGNMENTS ON ONE LINE ────────────────────────────────────
3
3
2
//= Var naming
5
9
3
error: extra semicolon
    $meaning-of-life: 42;;

//= LIST STUFF & INDEX ERRORS ─────────────────────────────────────────────
[  ]
error: list index out of range
    $emptyListTest.1;
//= BIND EMPTY AND THEN FILL WITH LIST ────────────────────────────────────
error: $empty-list already defined
    $empty-list: 50;
[ "now not empty" ]
//= DECLARE LIST AND ACCESS ITEMS ────────────────────────────────────────
"blue"
"green"
//= NESTED LISTS WITH INDEXING ────────────────────────────────────────────
3
//= MIXED LIST‐INSIDE‐TABLE ● INDEX VS ATTR ──────────────────────────────
"b"
//= LIST OF TABLES + INDEX OF TABLE ────────────────────────────────────
[ { $x: 5 }, { $x: 7 } ]
7
//= Out-of-bounds and weird list indices
[ 1, 2, 3 ]
error: list index out of range
    $list.0;
error: list index out of range
    $list.4;
error: list index out of range
    $list.-1;
error: can't use text as index
    $list."foo";
error: list index out of range
    $list.1.1;
//= List/table mutation
[ 1, 2 ]
[ 5, 2 ]
error: list index out of range
    $mutable.3 <: 9;
//= Trailing commas
[ 1, 2, 3 ]
error: double comma in list
    $badList1: [1,,2];
error: excess leading comma
    $badList2: [,1,2];
error: empty list with just a comma
    $badList3: [,];
//= Various type errors
"oops"
error: index applies to lists
    $notalist.1;

//= BINDING MATH OPERATIONS ────────────────────────────────────────────────
100
5
105
//= ARITHMETIC PRECEDENCE CHECK ─────────────────────────────────────────────
14
20
//= PARENTHESIZED EXPRESSIONS AS STAND‐ALONE ─────────────────────────────
15
//= LARGE NUMBERS + NEGATIVE NUMBERS ────────────────────────────────────
1234567890
-5
-10
0
error: double minus not allowed
    $weird: --5;

//= TABLE STUFF ───────────────────────────────────────────────────────────
{ $name: "Alice", $age: 30 }
"Alice"
30
//= REBINDING TABLE PROPERTIES ────────────────────────────────────────────
"Bob"
{ $name: "Bob", $age: 30 }
//= ANOTHER TABLE + PROPERTY REBIND ───────────────────────────────────────
{ $foo: 42, $bar: "hello" }
"hello"
100
{ $foo: 100, $bar: "hello" }
//= EMPTY TABLE LITERAL + BAD PROP ACCESS ERROR ──────────────────────────
{  }
error: table property not found: $someKey
    $emptyTable.someKey;
//= NESTED TABLE + MIXED INDEX/ATTR ───────────────────────────────────────
{ $inner: { $val: 42, $arr: [ 10, 20 ] } }
42
20
//= REBINDING NESTED TABLES ───────────────────────────────────────────────
100
//= COMPLEX TABLE + LIST INDEX/PROPERTY ACCESS ─────────────────────────
{ $tbl: { $a: [ 100, 200 ], $b: "x" }, $lst: [ { $foo: 1 }, { $foo: 2 } ] }
100
2
//= TABLE OF LISTS + INDEX OF LIST ─────────────────────────────────────
{ $first: [ 1, 2 ], $second: [ 3, 4 ] }
2
[ 3, 4 ]
//= MORE TABLE WEIRDNESS
{ $x: { $y: { $z: 7 } } }
7
//= Table property errors
{ $foo: 1 }
error: table property not found: $bar
    $table9.bar;
error: index applies to lists
    $table9.1;
error: table property not found: $bar
    $table9.foo.bar;
999
error: table property not found: $someKey
    $prim.someKey <: 5;
{ $a: 1 }
error: index applies to lists
    $myTbl.1;
{ $x: 1 }
99
{ $x: 99 }
error: table property not found: $y
    $tbl.y <: 42;
//= Valid trailing commas (should succeed)
{ $foo: 1, $bar: 2 }
//= invalid trailing commas (should error)
error: extra comma in table
    $badTable1: { $foo: 1,, $bar: 2 };
error: leading comma in table
    $badTable2: { ,$foo: 1, $bar: 2 };
error: empty table with comma
    $badTable3: { , };

//= TEXT + INTERPOLATION ───────────────────────────────────────────────────
"rebinding this text and "
"this is text example 2"
"just a plain text"
"rebinding this text and this is text example 2"
100
5
"100 plus 5 is: 105"
//= NOW THAT $colors & $i ARE DEFINED, INTERPOLATE A STRING THAT USES THEM ─
2
[ "red", "purple", "green", "silver" ]
"color 2 is purple"
//= COMPLEX MATH INTERPOLATION ● MULTIPLE EXPRESSIONS ───────────────────
7
3
"Sum=10 Prod=21"
//= COMPOUND INTERPOLATION WITH TABLE+LIST ACCESS ────────────────────────
{ $greeting: "hi", $nums: [ 2, 4 ] }
"hi! The nums are:2, and 4"
//= Unicode and weird strings
"π≈3.14"
"foo\nbar"
"foo\"bar\"baz"
//= Interpolation errors
error: parse error in interpolation
    "text <bad syntax>";
error: parse error in interpolation
    "hello <$foo + >";
error: parse error in interpolation
    "hello <<$foo>>";

//= Empty function atom
//= Function atom with just a single value
6
//= Function atom with single variable and implicit return
99
//= Nested function atoms
6
//= Function atom one liner with implicit return
5
6
//= Function with only a return statement (multi-line)
123
//= Multiline function atom with explicit return
200
//= Multiline function atom with explicit return 2
201
//= Multiline nested function atoms
32

//= Single line, implicit return, named function
4
4
4

//= Redundant semicolons and whitespace
error: extra semicolon
    ;;;;;;
error: extra semicolon
    ;   ;
//= Invalid parenthesis/brackets/braces
error: unmatched parenthesis
    (1 + 2;
error: unmatched bracket
    [1, 2, 3;
error: unmatched brace
    { $a: 1, $b: 2;
