# Context-aware block expressions for Enzo language
# This is a draft for the new grammar section to be merged into grammar.lark

# Value context block expression (auto-invoked)
block_expr_value: LPAR function_body RPAR

# Function context block expression (stored as function object)
block_expr_fn: LPAR function_body RPAR

# Update value contexts to use block_expr_value
?primary: list_literal
        | table_literal
        | block_expr_value         -> block_expr_value
        | call                    -> call
        | NUMBER_ATOM             -> number_atom
        | TEXT_ATOM               -> text_atom
        | NAME                    -> var

# Update binding contexts to use block_expr_fn
?assign_stmt: FUNCNAME ":" block_expr_fn  -> bind_func
            | NAME ":"  block_expr_fn      -> bind
            | NAME ":"                    -> bind_empty
            | NAME "<:" expr              -> rebind
            | expr ":>" NAME              -> rebind_lr
            | expr "<:" expr              -> prop_rebind

# All other uses of expr (arithmetic, lists, tables, etc.) will use block_expr_value via primary
